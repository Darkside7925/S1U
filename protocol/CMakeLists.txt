set(PROTOCOL_SOURCES
    s1u_protocol.cpp
    s1u_client.cpp
    s1u_server.cpp
    s1u_message.cpp
    s1u_serializer.cpp
    s1u_deserializer.cpp
    s1u_compression.cpp
    s1u_encryption.cpp
    s1u_authentication.cpp
    s1u_session.cpp
    s1u_channel.cpp
    s1u_stream.cpp
    s1u_packet.cpp
    s1u_frame.cpp
    s1u_buffer.cpp
    s1u_queue.cpp
    s1u_pool.cpp
    s1u_cache.cpp
    s1u_index.cpp
    s1u_hash.cpp
    s1u_tree.cpp
    s1u_graph.cpp
    s1u_matrix.cpp
    s1u_vector.cpp
    s1u_list.cpp
    s1u_map.cpp
    s1u_set.cpp
    s1u_stack.cpp
    s1u_heap.cpp
    s1u_priority_queue.cpp
    s1u_deque.cpp
    s1u_array.cpp
    s1u_tuple.cpp
    s1u_variant.cpp
    s1u_optional.cpp
    s1u_expected.cpp
    s1u_result.cpp
    s1u_error.cpp
    s1u_exception.cpp
    s1u_logger.cpp
    s1u_timer.cpp
    s1u_scheduler.cpp
    s1u_dispatcher.cpp
    s1u_executor.cpp
    s1u_future.cpp
    s1u_promise.cpp
    s1u_task.cpp
    s1u_coroutine.cpp
    s1u_generator.cpp
    s1u_iterator.cpp
    s1u_range.cpp
    s1u_view.cpp
    s1u_span.cpp
    s1u_string_view.cpp
    s1u_string.cpp
    s1u_regex.cpp
    s1u_format.cpp
    s1u_print.cpp
    s1u_scan.cpp
    s1u_parse.cpp
    s1u_lex.cpp
    s1u_yacc.cpp
    s1u_ast.cpp
    s1u_ir.cpp
    s1u_bytecode.cpp
    s1u_vm.cpp
    s1u_jit.cpp
    s1u_llvm.cpp
    s1u_gcc.cpp
    s1u_clang.cpp
    s1u_msvc.cpp
    s1u_icc.cpp
    s1u_pgi.cpp
    s1u_xl.cpp
    s1u_sun.cpp
    s1u_hp.cpp
    s1u_sgi.cpp
    s1u_cray.cpp
    s1u_fujitsu.cpp
    s1u_nvidia.cpp
    s1u_amd.cpp
    s1u_intel.cpp
    s1u_arm.cpp
    s1u_mips.cpp
    s1u_powerpc.cpp
    s1u_sparc.cpp
    s1u_alpha.cpp
    s1u_ia64.cpp
    s1u_x86.cpp
    s1u_x86_64.cpp
    s1u_arm64.cpp
    s1u_riscv.cpp
    s1u_m68k.cpp
    s1u_z80.cpp
    s1u_6502.cpp
    s1u_68000.cpp
    s1u_68020.cpp
    s1u_68030.cpp
    s1u_68040.cpp
    s1u_68060.cpp
    s1u_8086.cpp
    s1u_80286.cpp
    s1u_80386.cpp
    s1u_80486.cpp
    s1u_pentium.cpp
    s1u_pentium_pro.cpp
    s1u_pentium_ii.cpp
    s1u_pentium_iii.cpp
    s1u_pentium_4.cpp
    s1u_pentium_m.cpp
    s1u_core.cpp
    s1u_core_2.cpp
    s1u_core_i3.cpp
    s1u_core_i5.cpp
    s1u_core_i7.cpp
    s1u_core_i9.cpp
    s1u_xeon.cpp
    s1u_athlon.cpp
    s1u_duron.cpp
    s1u_sempron.cpp
    s1u_phenom.cpp
    s1u_fx.cpp
    s1u_ryzen.cpp
    s1u_epyc.cpp
    s1u_threadripper.cpp
    s1u_opteron.cpp
    s1u_turion.cpp
    s1u_geode.cpp
    s1u_bobcat.cpp
    s1u_jaguar.cpp
    s1u_puma.cpp
    s1u_excavator.cpp
    s1u_zen.cpp
    s1u_zen_2.cpp
    s1u_zen_3.cpp
    s1u_zen_4.cpp
    s1u_zen_5.cpp
    s1u_zen_6.cpp
    s1u_zen_7.cpp
    s1u_zen_8.cpp
    s1u_zen_9.cpp
    s1u_zen_10.cpp
)

add_library(s1u_protocol STATIC ${PROTOCOL_SOURCES})

target_link_libraries(s1u_protocol
    Threads::Threads
    dl
    m
    rt
    ssl
    crypto
    z
    lz4
    lzo2
    snappy
    zstd
    brotli
    bzip2
    xz
    lzma
    lzop
    compress
    archive
    curl
    http_parser
    json
    yaml
    xml2
    protobuf
    flatbuffers
    capnproto
    msgpack
    avro
    thrift
    grpc
    websocketpp
    boost_system
    boost_thread
    boost_chrono
    boost_date_time
    boost_filesystem
    boost_program_options
    boost_regex
    boost_serialization
    boost_signals2
    boost_asio
    boost_coroutine
    boost_context
    boost_fiber
    boost_log
    boost_log_setup
    boost_iostreams
    boost_locale
    boost_math
    boost_random
    boost_graph
    boost_geometry
    boost_spirit
    boost_phoenix
    boost_fusion
    boost_mpl
    boost_type_traits
    boost_smart_ptr
    boost_optional
    boost_variant
    boost_any
    boost_function
    boost_bind
    boost_ref
    boost_tuple
    boost_array
    boost_circular_buffer
    boost_heap
    boost_intrusive
    boost_unordered
    boost_bimap
    boost_multi_index
    boost_property_tree
    boost_property_map
    boost_dynamic_bitset
    boost_icl
    boost_interval
    boost_rational
    boost_units
    boost_accumulators
    boost_statistics
    boost_histogram
    boost_odeint
    boost_numeric_odeint
    boost_numeric_ublas
    boost_numeric_bindings
    boost_numeric_conversion
    boost_numeric_interval
    boost_numeric_odeint
    boost_numeric_ublas
    boost_numeric_bindings
    boost_numeric_conversion
    boost_numeric_interval
)

target_compile_options(s1u_protocol PRIVATE
    -O3
    -march=native
    -mtune=native
    -flto
    -fomit-frame-pointer
    -ffast-math
    -funroll-loops
    -fno-exceptions
    -fno-rtti
    -Wall
    -Wextra
    -Werror
)
